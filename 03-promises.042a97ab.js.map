{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,SAASC,iBAAiB,oBAAoB,WAa5C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAtBPJ,SACGY,eAAe,gBACfX,iBAAiB,UAAU,SAAUY,GACpCA,EAAMC,iBAEN,IAAMV,EAAQW,SAASf,SAASgB,kBAAkB,SAAS,GAAGC,OACxDC,EAAOH,SAASf,SAASgB,kBAAkB,QAAQ,GAAGC,QAoBhE,SAAwBE,EAAQC,EAAYF,GAC1C,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAGhCnB,EAAcmB,EAFOD,GAAcC,EAAI,GAAKH,GAGzCI,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA1B,GAAS2B,OAAOI,QACd,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,KA7BjD0B,CAFef,SAASf,SAASgB,kBAAkB,UAAU,GAAGC,OAEzCb,EAAOc,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  document\n    .getElementById('promisesForm')\n    .addEventListener('submit', function (event) {\n      event.preventDefault();\n\n      const delay = parseInt(document.getElementsByName('delay')[0].value);\n      const step = parseInt(document.getElementsByName('step')[0].value);\n      const amount = parseInt(document.getElementsByName('amount')[0].value);\n\n      createPromises(amount, delay, step);\n    });\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  function createPromises(amount, firstDelay, step) {\n    for (let i = 1; i <= amount; i++) {\n      const currentDelay = firstDelay + (i - 1) * step;\n\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.Success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.Failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  }\n});\n"],"names":["$ejkSG","parcelRequire","document","addEventListener","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","getElementById","event","preventDefault","parseInt","getElementsByName","value","step","amount","firstDelay","i","then","param","$parcel$interopDefault","Notify","Success","concat","catch","Failure","createPromises"],"version":3,"file":"03-promises.042a97ab.js.map"}