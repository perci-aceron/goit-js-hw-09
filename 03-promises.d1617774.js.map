{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SAWA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjBbJ,EAAAY,OAAgBC,KAAK,CACnBC,MAAO,QACPX,SAAU,YACVY,SAAU,OACVC,QAAS,MAkBEC,SAASC,cAAc,SAC/BC,iBAAiB,UAAUC,MAAMC,IACpCA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAASH,EAAMI,QAC9BC,EAAaH,EAASI,IAAI,SAC1BC,EAAYL,EAASI,IAAI,QACzBE,EAASN,EAASI,IAAI,UAE5B,GAAIG,MAAMJ,IAAeI,MAAMF,IAAcE,MAAMD,GACjD7B,EAAAY,OAAgBmB,QAAQ,8CAI1B,IACE,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IAAK,CAC/B,MAAMC,QAAe/B,EAAc8B,EAAI,EAAGN,EAAaM,EAAIJ,GAC3D5B,EAAAY,OAAgBsB,QACd,qBAAqBD,EAAO9B,eAAe8B,EAAO7B,U,EAGtD,MAAO+B,GACPnC,EAAAY,OAAgBmB,QACd,oBAAoBI,EAAMhC,eAAegC,EAAM/B,U","sources":["src/js/03-promises.js"],"sourcesContent":["// Import Notiflix library\nconst notiflix = require('notiflix');\n\n// Initialize Notiflix\nnotiflix.Notify.Init({\n  width: '300px',\n  position: 'right-top',\n  distance: '10px',\n  timeout: 3000,\n});\n\n// Function to create a promise\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Handle form submission\nconst form = document.querySelector('.form');\nform.addEventListener('submit', async event => {\n  event.preventDefault();\n\n  const formData = new FormData(event.target);\n  const firstDelay = formData.get('delay');\n  const delayStep = formData.get('step');\n  const amount = formData.get('amount');\n\n  if (isNaN(firstDelay) || isNaN(delayStep) || isNaN(amount)) {\n    notiflix.Notify.Failure('Invalid input. Please enter a number.');\n    return;\n  }\n\n  try {\n    for (let i = 0; i < amount; i++) {\n      const result = await createPromise(i + 1, firstDelay + i * delayStep);\n      notiflix.Notify.Success(\n        `Fulfilled promise ${result.position} in ${result.delay}ms`\n      );\n    }\n  } catch (error) {\n    notiflix.Notify.Failure(\n      `Rejected promise ${error.position} in ${error.delay}ms`\n    );\n  }\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","Init","width","distance","timeout","document","querySelector","addEventListener","async","event","preventDefault","formData","FormData","target","firstDelay","get","delayStep","amount","isNaN","Failure","i","result","Success","error"],"version":3,"file":"03-promises.d1617774.js.map"}